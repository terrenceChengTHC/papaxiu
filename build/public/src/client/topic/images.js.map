{"version":3,"sources":["public/src/client/topic/images.js"],"names":["define","postTools","navigator","components","Images","_imageLoaderTimeout","undefined","unloadImages","posts","images","find","config","delayImageLoading","each","$","this","attr","wrapImagesInLinks","loadImages","threshold","clearTimeout","setTimeout","get","visible","filter","utils","isElementInViewport","unique","map","parents","scrollTop","window","adjusting","adjustQueue","oldHeight","newHeight","adjustPosition","document","body","clientHeight","imageRect","getBoundingClientRect","top","length","pop","index","image","on","call","push","bind","removeAttr","$this","src","alt","suffixRegex","isRelativeUrl","test","replace","srcExt","split","slice","altFilename","altExt","parent","is","wrap"],"mappings":"AAAA,aAGAA,OAAO,sBACN,wBACA,YACA,cACE,SAAUC,EAAWC,EAAWC,GAClC,IAAIC,GACHC,oBAAqBC,WAGtBF,EAAOG,aAAe,SAAUC,GAC/B,IAAIC,EAASD,EAAME,KAAK,uDAExB,GAAIC,OAAOC,kBAAmB,CAC7BH,EAAOI,KAAK,WACXC,EAAEC,MAAMC,KAAK,WAAYF,EAAEC,MAAMC,KAAK,UACpCA,KAAK,aAAc,YAAYA,KAAK,MAAO,mBACxC,CACNP,EAAOO,KAAK,aAAc,UAC1BZ,EAAOa,kBAAkBT,KAI3BJ,EAAOc,WAAa,SAAUC,GAC7B,GAAIf,EAAOC,oBAAqB,CAC/Be,aAAahB,EAAOC,qBAGrB,IAAKM,OAAOC,kBAAmB,CAC9B,OAGDR,EAAOC,oBAAsBgB,WAAW,WAUvC,IAAIZ,EAASN,EAAWmB,IAAI,gBAAgBZ,KAAK,8BACjD,IAAIa,EAAUd,EAAOe,OAAO,WAC3B,OAAOC,MAAMC,oBAAoBX,QAElC,IAAIP,EAAQM,EAAEa,OAAOJ,EAAQK,IAAI,WAChC,OAAOd,EAAEC,MAAMc,QAAQ,sBAAsBP,IAAI,MAElD,IAAIQ,EAAYhB,EAAEiB,QAAQD,YAC1B,IAAIE,EAAY,MAChB,IAAIC,KACJ,IAAIC,EACJ,IAAIC,EAEJ,SAASC,IACRJ,EAAY,KACZE,EAAYG,SAASC,KAAKC,aAG1BzB,EAAEC,MAAMC,KAAK,aAAc,UAC3BmB,EAAYE,SAASC,KAAKC,aAE1B,IAAIC,EAAYzB,KAAK0B,wBACrB,GAAID,EAAUE,IAAMvB,EAAW,CAC9BW,GAAaK,EAAYD,EACzBpB,EAAEiB,QAAQD,UAAUA,GAGrB,GAAIG,EAAYU,OAAQ,CACvBV,EAAYW,YACN,CACNZ,EAAY,MAEZ5B,EAAOa,kBAAkBT,GACzBA,EAAMmC,OAAS,GAKjBpB,EAAQP,KAAK,aAAc,WAC3BO,EAAQV,KAAK,SAAUgC,EAAOC,GAC7BA,EAAQhC,EAAEgC,GAEVA,EAAMC,GAAG,OAAQ,WAChB,IAAKf,EAAW,CACfI,EAAeY,KAAKjC,UACd,CACNkB,EAAYgB,KAAKb,EAAec,KAAKnC,UAIvC+B,EAAM9B,KAAK,MAAO8B,EAAM9B,KAAK,aAC7B8B,EAAMK,WAAW,eAEhB,MAGJ/C,EAAOa,kBAAoB,SAAUT,GACpCA,EAAME,KAAK,8CAA8CG,KAAK,WAC7D,IAAIuC,EAAQtC,EAAEC,MACd,IAAIsC,EAAMD,EAAMpC,KAAK,QAAU,GAC/B,IAAIsC,EAAMF,EAAMpC,KAAK,QAAU,GAC/B,IAAIuC,EAAc,sBAElB,GAAIF,IAAQ,cAAe,CAC1B,OAGD,GAAI5B,MAAM+B,cAAcH,IAAQE,EAAYE,KAAKJ,GAAM,CACtDA,EAAMA,EAAIK,QAAQH,EAAa,MAEhC,IAAII,EAASN,EAAIO,MAAM,KAAKC,MAAM,GAAGjB,MACrC,IAAIkB,EAAcR,EAAIM,MAAM,KAAKhB,MACjC,IAAImB,EAASD,EAAYF,MAAM,KAAKC,MAAM,GAAGjB,MAE7C,IAAKQ,EAAMY,SAASC,GAAG,KAAM,CAC5Bb,EAAMc,KAAK,YAAcb,EAAM,OAC1BM,GAAUI,EAAS,cAAgBD,EAAc,KAAO,IAC1D,0BAMN,OAAO1D","file":"public/src/client/topic/images.js","sourcesContent":["'use strict';\n\n\ndefine('forum/topic/images', [\n\t'forum/topic/postTools',\n\t'navigator',\n\t'components',\n], function (postTools, navigator, components) {\n\tvar Images = {\n\t\t_imageLoaderTimeout: undefined,\n\t};\n\n\tImages.unloadImages = function (posts) {\n\t\tvar images = posts.find('[component=\"post/content\"] img:not(.not-responsive)');\n\n\t\tif (config.delayImageLoading) {\n\t\t\timages.each(function () {\n\t\t\t\t$(this).attr('data-src', $(this).attr('src'));\n\t\t\t}).attr('data-state', 'unloaded').attr('src', 'about:blank');\n\t\t} else {\n\t\t\timages.attr('data-state', 'loaded');\n\t\t\tImages.wrapImagesInLinks(posts);\n\t\t}\n\t};\n\n\tImages.loadImages = function (threshold) {\n\t\tif (Images._imageLoaderTimeout) {\n\t\t\tclearTimeout(Images._imageLoaderTimeout);\n\t\t}\n\n\t\tif (!config.delayImageLoading) {\n\t\t\treturn;\n\t\t}\n\n\t\tImages._imageLoaderTimeout = setTimeout(function () {\n\t\t\t/*\n\t\t\t\tIf threshold is defined, images loaded above this threshold will modify\n\t\t\t\tthe user's scroll position so they are not scrolled away from content\n\t\t\t\tthey were reading. Images loaded below this threshold will push down content.\n\n\t\t\t\tIf no threshold is defined, loaded images will push down content, as per\n\t\t\t\tdefault\n\t\t\t*/\n\n\t\t\tvar images = components.get('post/content').find('img[data-state=\"unloaded\"]');\n\t\t\tvar visible = images.filter(function () {\n\t\t\t\treturn utils.isElementInViewport(this);\n\t\t\t});\n\t\t\tvar posts = $.unique(visible.map(function () {\n\t\t\t\treturn $(this).parents('[component=\"post\"]').get(0);\n\t\t\t}));\n\t\t\tvar scrollTop = $(window).scrollTop();\n\t\t\tvar adjusting = false;\n\t\t\tvar adjustQueue = [];\n\t\t\tvar oldHeight;\n\t\t\tvar newHeight;\n\n\t\t\tfunction adjustPosition() {\n\t\t\t\tadjusting = true;\n\t\t\t\toldHeight = document.body.clientHeight;\n\n\t\t\t\t// Display the image\n\t\t\t\t$(this).attr('data-state', 'loaded');\n\t\t\t\tnewHeight = document.body.clientHeight;\n\n\t\t\t\tvar imageRect = this.getBoundingClientRect();\n\t\t\t\tif (imageRect.top < threshold) {\n\t\t\t\t\tscrollTop += newHeight - oldHeight;\n\t\t\t\t\t$(window).scrollTop(scrollTop);\n\t\t\t\t}\n\n\t\t\t\tif (adjustQueue.length) {\n\t\t\t\t\tadjustQueue.pop()();\n\t\t\t\t} else {\n\t\t\t\t\tadjusting = false;\n\n\t\t\t\t\tImages.wrapImagesInLinks(posts);\n\t\t\t\t\tposts.length = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// For each image, reset the source and adjust scrollTop when loaded\n\t\t\tvisible.attr('data-state', 'loading');\n\t\t\tvisible.each(function (index, image) {\n\t\t\t\timage = $(image);\n\n\t\t\t\timage.on('load', function () {\n\t\t\t\t\tif (!adjusting) {\n\t\t\t\t\t\tadjustPosition.call(this);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tadjustQueue.push(adjustPosition.bind(this));\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\timage.attr('src', image.attr('data-src'));\n\t\t\t\timage.removeAttr('data-src');\n\t\t\t});\n\t\t}, 250);\n\t};\n\n\tImages.wrapImagesInLinks = function (posts) {\n\t\tposts.find('[component=\"post/content\"] img:not(.emoji)').each(function () {\n\t\t\tvar $this = $(this);\n\t\t\tvar src = $this.attr('src') || '';\n\t\t\tvar alt = $this.attr('alt') || '';\n\t\t\tvar suffixRegex = /-resized(\\.[\\w]+)?$/;\n\n\t\t\tif (src === 'about:blank') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (utils.isRelativeUrl(src) && suffixRegex.test(src)) {\n\t\t\t\tsrc = src.replace(suffixRegex, '$1');\n\t\t\t}\n\t\t\tvar srcExt = src.split('.').slice(1).pop();\n\t\t\tvar altFilename = alt.split('/').pop();\n\t\t\tvar altExt = altFilename.split('.').slice(1).pop();\n\n\t\t\tif (!$this.parent().is('a')) {\n\t\t\t\t$this.wrap('<a href=\"' + src + '\" '\n\t\t\t\t\t+ (!srcExt && altExt ? ' download=\"' + altFilename + '\" ' : '')\n\t\t\t\t\t+ ' target=\"_blank\" >');\n\t\t\t}\n\t\t});\n\t};\n\n\n\treturn Images;\n});\n"]}